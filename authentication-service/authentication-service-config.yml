

########## database configuration##########
spring:
  datasource:
    url: jdbc:mysql://localhost:3306/FoodSwipeUser
    username: root
    password: Bayvao@8759
    hikari:
      connection-timeout: 50000
      idle-timeout: 10000
      max-lifetime: 30000
      minimum-idle: 5
      maximum-pool-size: 10
  kafka:
    template:
      default-topic: send-otp-events
    producer:
      bootstrap-servers: localhost:9095,localhost:9096,localhost:9097
      key-serializer: org.apache.kafka.common.serialization.IntegerSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      ssl:
        trust-store-location: 'file:\E:\Spring and Hibernate\Kafka\ssl\client.truststore.jks'
        trust-store-password: password
        key-store-location: 'file:\E:\Spring and Hibernate\Kafka\ssl\client.keystore.jks'
        key-store-password: password
      properties:
        acks: all
        retries: 10
        retry.backoff.ms: 1000
        security:
          protocol: SSL
        ssl.endpoint.identification.algorithm:

logging:
  level:
    com.food.swipe: DEBUG
    com.core.libraries.logging: DEBUG

#### Brute force attack counter, you can also handle this through a generic database back configuration ###############
security:
  failedlogin:
    count: 5

brute:
  force:
    cache:
      max: 1000

#### whitelisting URIs ####
com.food.swipe.publicURIs: {\
  '/v1/users/register':'POST',\
  '/v1/users/login':'GET'}



